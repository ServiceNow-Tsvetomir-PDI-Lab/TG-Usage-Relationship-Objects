// === Layout and Container Styles ===
/* Container styling for overall widget layout */
.container {
  background-color: #ffffff; /* white background for clean look */
  border-radius: 10px; /* rounded corners */
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.05); /* subtle shadow for depth */
}

/* Headings styling */
h3, h5 {
  font-weight: 600; /* bold for visibility */
  color: #0b5ed7; /* ServiceNow brand blue */
}


// === Alert Box Styling ===
/* Alert box base styling */
.alert {
  border-radius: 8px;
  padding: 1rem;
  font-size: 0.95rem; /* slightly smaller font */
}

/* Info alert background and border */
.alert-info {
  background-color: #e7f3fe;
  border-left: 5px solid #0dcaf0; /* blue accent bar */
}

/* Secondary alert for instructions */
.alert-secondary {
  background-color: #f8f9fa;
  border-left: 5px solid #6c757d; /* gray accent bar */
}

/* Warning alert for tips */
.alert-warning {
  background-color: #fff3cd;
  border-left: 5px solid #ffc107; /* yellow accent bar */
}

// === Form Input and Field Styling ===
/* Add spacing between form fields */
.form-group {
  margin-top: 1.5rem;
}

/* Form control inputs */
input.form-control {
  border-radius: 6px; /* rounded input boxes */
}

// === Button Styling ===
/* Base button styling */
button {
  border-radius: 6px !important;
}

/* Outline button transitions for better UX */
.btn-outline-secondary,
.btn-outline-info {
  transition: all 0.2s ease-in-out;
}

// === Results Display Styling ===
/* Styling for code preview blocks */
pre {
  background-color: #f8f9fa;
  padding: 0.75rem;
  border-radius: 6px;
  font-size: 0.85rem;
  white-space: pre-wrap; /* allow wrapping in <pre> */
}

/* Slightly smaller table font */
.table {
  font-size: 0.9rem;
}

// === Modal Styling ===
/* Modal content appearance */
.modal-content {
  border-radius: 10px;
}

/* Bold title inside modal */
.modal-title {
  font-weight: 600;
}

// === Toggle Switch Styling ===
/* Toggle switch styling */
.switch {
  position: relative;
  display: inline-block;
  width: 50px;
  height: 24px;
  margin-left: 0.5rem;
}

.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

/* Track of the switch */
.slider {
  position: absolute;
  cursor: pointer;
  top: 0; left: 0;
  right: 0; bottom: 0;
  background-color: #ccc;
  transition: 0.4s;
  border-radius: 24px;
}

/* Circle inside the switch */
.slider:before {
  position: absolute;
  content: "";
  height: 18px;
  width: 18px;
  left: 3px;
  bottom: 3px;
  background-color: white;
  transition: 0.4s;
  border-radius: 50%;
}

/* Switch when toggled on */
input:checked + .slider {
  background-color: #0d6efd; /* blue when active */
}

/* Move toggle circle to the right when on */
input:checked + .slider:before {
  transform: translateX(26px);
}

// === Conditional Visibility Overrides ===
/* Hide Local Storage Tracker Section Input field and Save button*/
input.form-control.mb-2.ng-pristine.ng-untouched.ng-valid.ng-empty {
    display: none;
}
button.btn.btn-secondary.me-2{
  display:none;
}

// === Loader Animation Styling ===
/* Loader Container */
.loader-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(255, 255, 255, 0.9);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 9999;
}

/* Loader Animation */
.loader {
  position: relative;
  width: 80px;
  height: 80px;
}

.box-load1, .box-load2, .box-load3 {
  border: 3px solid #000;
  position: absolute;
  width: 100%;
  height: 100%;
}

/* The `.box-load1` class is defining a CSS animation property for an element with that class.
Specifically, it is setting the animation named `animate` to run for a duration of 0.5 seconds, with
a linear timing function, and to repeat infinitely. This means that the element with the
`.box-load1` class will continuously rotate by 90 degrees in a linear manner every 0.5 seconds,
creating a spinning effect. */
.box-load1 {
  animation: animate 0.5s linear infinite;
}

/* The `.box-load2` class is defining a CSS animation property for an element with that class.
Specifically, it is setting the animation named `animate` to run for a duration of 0.5 seconds, with
a linear timing function, and to repeat infinitely. Additionally, it introduces a delay of 0.2
seconds before starting the animation. */
.box-load2 {
  animation: animate 0.5s linear infinite 0.2s;
}

/* The `.box-load3` class is defining a CSS animation property for an element with that class.
Specifically, it is setting the animation named `animate` to run for a duration of 0.5 seconds, with
a linear timing function, and to repeat infinitely. Additionally, it introduces a delay of 0.4
seconds before starting the animation. */
.box-load3 {
  animation: animate 0.5s linear infinite 0.4s;
}

// === Animation Keyframes ===
/* The `@keyframes animate` rule in CSS is defining a set of keyframes for an animation named
`animate`. */
@keyframes animate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(90deg);
  }
}



// Flex layout for inline input and buttons within form-group
.form-group {
  display: flex;
  align-items: center;
  gap: 0.5rem;        // space between input and buttons
  margin-top: 1rem;   // vertical spacing above group
}

.form-group .form-control {
  flex: 1;            // input grows to fill available space
  margin: 0;          // reset any default margins
}

.form-group .btn {
  margin: 0;          // rely on gap for spacing
}

// Info section above input
.info-section {
  display: flex;
  justify-content: space-between;
  align-items: center;
  border: 1px solid #e0e0e0;
  border-radius: 0.75rem;
  padding: 0.75rem 1rem;
  margin-bottom: 1rem;
  background: #ffffff;
}

.info-section .btn-copy-id {
  background: none;
  border: none;
  color: #005ff8;
  cursor: pointer;
}

.info-section code {
  background: transparent;
  font-weight: 600;
}

// === Recent Searches and Field Styling ===
/* Styling for Local Storage Tracker (Saved Entries) */
.recent-searches {
  background: #ffffff;
  border: 1px solid #e0e0e0;
  border-radius: 0.75rem;
  padding: 1rem;
  margin-top: 1.5rem;
}

.recent-searches > h4 {
  margin: 0 0 1rem;
  font-size: 1.25rem;
  font-weight: 600;
  color: #000;
}

.recent-searches .list-group {
  list-style: none;
  padding: 0;
  margin: 0;
}

.recent-searches .list-group-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-top: 1.1rem solid #e9ecef;
}


.recent-searches .list-group-item a {
  color: #005ff8;
  font-weight: 500;
  text-decoration: none;
}

.recent-searches .list-group-item small.text-muted {
  display: block;
  font-size: 0.85rem;
  color: #666;
  margin-top: 0.25rem;
}

.recent-searches .list-group-item button {
  background: none;
  border: none;
  color: #666;
  cursor: pointer;
  padding: 0.25rem;
}

/* Header for Recent Searches section */
.recent-searches .recent-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1rem;
}

/* Subheadings */
.tracking-tight {
  letter-spacing: -0.025em;
}

/* Font size adjustments */
.leading-none {
  line-height: 1;
}

/* Font size for larger text */
.font-semibold {
  font-weight: 600;
}



/* Custom Clear History button styling */
.btn-clear-history {
  background: none;
  border: none;
  color: #000;
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0;
  font-size: 1.5rem;
  cursor: pointer;
}
.btn-clear-history i {
  font-size: 1.2rem;
}
